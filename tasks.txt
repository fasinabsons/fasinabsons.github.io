Below is an organized and efficient task checklist tailored for the Cursor IDE to address the issues and requirements for your QR code generator application. The tasks are structured to ensure a systematic approach, focusing on fixing the identified problems in the Standard (Single and Bulk), Template (Single and Bulk), and Business Card to QR Code features. The checklist ensures accuracy, alignment, and a professional finish, with no extraneous complexity. Cursor should verify each task thoroughly before proceeding to the next.

---

### Task Checklist for Cursor IDE

#### General Setup
- **Default Images**: Add the following images as default background options in `src/assets/backgrounds/`:
  1. `01.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\01.png`
  2. `02.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\02.png`
  3. `03.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\03.png`
  4. `04.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\04.png`
  5. `05.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\05.png`
  6. `06.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\06.png`
  7. `07.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\07.png`
  8. `08.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\08.png`
  9. `09.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\09.png`
  10. `10.png` from `C:\Users\Lenovo\Pictures\qrapp2\src\assets\10.png`
- Verify images are accessible and listed in the app for selection.

---

#### Standard Generator (Single Mode)
- **Issue 1: Gradient Inaccuracy**
  - Fix the gradient feature in `StandardGenerator.tsx` to reflect the selected gradient color accurately in the QR code.
  - Ensure `qrcode.react` or a canvas-based approach supports gradient rendering (e.g., use a fallback with solid color if gradient fails).
  - Test with multiple gradient colors to confirm reflection.
- **Issue 2: Border Radius Not Working**
  - Update `StandardGenerator.tsx` to apply border radius to the QR code using CSS or `qrcode.react` props.
  - Verify the radius adjusts dynamically with user input and renders correctly in the preview.
  - Test with various radius values (e.g., 10px, 20px).

---

#### Template Generator (Single Mode)
- **Issue 1: Add New Template Layout**
  - Add a new template layout "QR Bottom and Message Bottom" in `TemplateGenerator.tsx`.
  - Ensure this layout positions the QR code at the bottom half and a single message below it, suitable for brand names.
  - Test the new layout in preview and download.
- **Issue 2: Background Image Display**
  - Fix `TemplateGenerator.tsx` to correctly display the uploaded background image (PNG, JPG, SVG, max 10MB) in the preview.
  - Remove gradient option as it’s unnecessary for this mode.
  - Verify image alignment and scaling to 1080x1920.
- **Issue 3: Remove Name from Preview/Download**
  - Modify `TemplateGenerator.tsx` and `QRCodeCard.tsx` to exclude the person’s name from the preview and downloaded PNG.
  - Ensure only the QR code and message are visible.
  - Test the output to confirm name absence.
- **Issue 4: QR Code Positioning**
  - Adjust `QRCodeCard.tsx` to position the QR code lower on the phone layout:
    - For "QR Top," move QR to the top quarter.
    - For "QR Middle," center QR in the middle half.
    - For "QR Bottom," align QR to the bottom half.
  - Ensure the preview reflects a phone lockscreen layout (1080x1920) with accurate positioning.
  - Test all template styles for correct alignment.

---

#### Standard Generator (Bulk Mode)
- **Issue 1: Gradient Not Working**
  - Fix gradient implementation in `StandardGenerator.tsx` for bulk mode to match single mode fixes.
  - Ensure each QR code in the bulk process reflects the selected gradient color.
  - Test with a sample Excel file (e.g., 5 entries).
- **Issue 2: Border Radius Ineffective**
  - Enable border radius adjustment in `StandardGenerator.tsx` for bulk-generated QR codes.
  - Verify radius changes are applied to all QR codes in the preview and ZIP download.
  - Test with different radius values across multiple entries.

---

#### Template Generator (Bulk Mode)
- **Issue 1: Step-by-Step Process**
  - Refactor `TemplateGenerator.tsx` to implement a step-by-step workflow similar to Business Card to QR (e.g., upload Excel, select template, customize, generate).
  - Ensure each step is clear and simple, with a "Next" button progression.
  - Test the flow with a sample Excel file.
- **Issue 2: QR Code Positioning**
  - Correct QR positioning in `QRCodeCard.tsx` for bulk mode:
    - Top half for "QR Top."
    - Middle half for "QR Middle."
    - Bottom half for "QR Bottom" and new "QR Bottom and Message Bottom."
  - Verify alignment matches phone lockscreen layout in preview.
  - Test all templates with bulk data.
- **Issue 3: Gradient Not Working**
  - Remove gradient option from `TemplateGenerator.tsx` bulk mode (consistent with single mode decision).
  - Ensure no gradient-related code remains.
  - Test bulk generation to confirm removal.
- **Issue 4: Border Radius**
  - Remove border radius option from `TemplateGenerator.tsx` bulk mode (align with single mode simplicity).
  - Verify no radius adjustments affect bulk QR codes.
  - Test bulk output for consistency.
- **Issue 5: Download Button Icon**
  - Replace the color palette icon with a download icon (e.g., `Download` from `lucide-react`) in `TemplateGenerator.tsx`.
  - Ensure the button triggers ZIP or individual file downloads.
  - Test the new icon functionality.

---

#### Business Card to QR Generator
- **Issue 1: Inaccurate OCR Data**
  - Improve `cardScanner.ts` with `tesseract.js` to handle OCR data accurately:
    - Split phone numbers (e.g., "+971 2 4450707 | +971 2 4455052" to "Phone 1: +971 2 4450707, Phone 2: +971 2 4455052").
    - Correct organization (e.g., "‎A P.O Box: 25475, Abu Dhabi, UAE" to separate address fields).
    - Fix malformed data (e.g., "F +9712 441 1" to organization "F" and phone).
  - Test with multiple card samples (e.g., Mariam alali, previous card) to ensure robust handling.
- **Issue 2: Font Size Visibility**
  - Fix `OCRToQRGenerator.tsx` to display all font sizes (e.g., 24px) in the selector, avoiding white color hiding.
  - Ensure the selected font size is visible and adjustable.
  - Test font size changes in preview.
- **Issue 3: Font Selection Issue**
  - Resolve the unselecting issue in `OCRToQRGenerator.tsx` with `FontSelector.tsx` integration.
  - Ensure the tick stays on the selected font and applies correctly.
  - Test font selection and preview rendering.
- **Issue 4: QR Code Positioning**
  - Adjust `QRCodeCard.tsx` to position the QR code at the bottom half for the "Bottom Area" layout in `OCRToQRGenerator.tsx`.
  - Match the phone lockscreen layout (1080x1920) as seen in Template modes.
  - Test the bottom alignment in preview.
- **Issue 5: Name and Contact Information Display**
  - Add a checkbox in `OCRToQRGenerator.tsx` to toggle name display (default off).
  - Remove "Contact Information" and name from the card preview/download unless checkbox is enabled.
  - Update the note: "Note: Only your custom message will appear on the card. Contact details are embedded in the QR code for privacy."
  - Test with and without the checkbox to confirm name exclusion.

---

#### General Improvements
- **Preview and Download Options**:
  - Add a preview in all modes (Standard Single/Bulk, Template Single/Bulk, Business Card to QR) with a download button.
  - Allow downloads of individual QR code, vCard, or all as a ZIP file.
  - Test download options with sample data in each mode.
- **Alignment and Perfection**:
  - Ensure all QR codes are perfectly aligned in previews (top, middle, bottom halves) for phone lockscreen use.
  - Verify all templates and modes render consistently at 1080x1920.
  - Test with multiple devices/screens for alignment accuracy.

---

#### Instructions for Cursor
- Verify each task thoroughly before moving to the next.
- Ensure all fixes are applied to the respective files (`StandardGenerator.tsx`, `TemplateGenerator.tsx`, `OCRToQRGenerator.tsx`, `QRCodeCard.tsx`, `cardScanner.ts`) without introducing conflicts.
- Simplify code where possible, removing unused features (e.g., gradient in Template, border radius in bulk).
- Test each change with real data (e.g., Excel files, scanned cards) to confirm accuracy and professionalism.
- Do not proceed until all issues are resolved and the app functions perfectly.